pipeline {
    environment {
        registry = "humahmed1/repository"
        registryCredential = 'dockerhub'
        PATH = '/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Users/humahmed1/google-cloud-sdk/bin/'

    }
    agent any
    tools {
        maven '3.6.3'
    }
    stages {
        stage('Build') {
            steps {
                sh 'mvn -B -DskipTests clean package -f cmp-mock-customer-es/pom.xml'
            }
        }
        stage('Unit Test') {
            steps {
                sh 'mvn -Dtest=RetailCustomerApplicationTest test -f cmp-mock-customer-es/pom.xml'
            }
            post {
                always {
                    junit 'cmp-mock-customer-es/target/surefire-reports/*.xml'
                }
            }
        }
        stage('Create GKE Cluster') {
            steps {
                sh """

                     gcloud config set project burner-humahmed1;
                     gcloud container clusters create cmp-es-cluster --num-nodes=3;

                     gcloud container clusters get-credentials cmp-es-cluster;
                     """
                }
        }
        stage('Build Image') {
            steps {
                sh 'docker build -t gcr.io/burner-humahmed1/mock-gcp-es:v1 cmp-mock-customer-es'
                }
        }
        stage('Push Image to Container Registry') {
            steps {
                sh """

                    gcloud auth configure-docker;
                    """
                sh 'docker push gcr.io/burner-humahmed1/mock-gcp-es:v1'
                }
        }
        stage('Deploy') {
            steps {
                sh 'kubectl create deployment es-server --image=gcr.io/burner-humahmed1/mock-gcp-es:v1'
                sh 'kubectl expose deployment es-server --type LoadBalancer --port 8070'
                sh 'export FRONTEND_SERVICE_IP=$(kubectl get -o jsonpath="{.status.loadBalancer.ingress[0].ip}" services es-server)'
                }
        }
    }